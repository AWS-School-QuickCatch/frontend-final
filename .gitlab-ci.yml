stages:
  - build  # 빌드 단계 정의

variables:
  CUSTOM_REGISTRY: "$CUSTOM_REGISTRY"  # 사용자 정의 레지스트리 주소
  CUSTOM_REGISTRY_USER: "$CUSTOM_REGISTRY_USER"  # 사용자 정의 레지스트리 사용자 이름
  CUSTOM_REGISTRY_PASSWORD: "$CUSTOM_REGISTRY_PASSWORD"  # 사용자 정의 레지스트리 비밀번호
  CUSTOM_IMAGE_NAME: "$CUSTOM_IMAGE_NAME"  # 사용자 정의 이미지 이름

build-and-push:
  stage: build  # 빌드 단계에 속하는 작업
  image: docker:19.03.12  # Docker CLI 버전 지정
  services:
    - name: docker:19.03.12-dind  # Docker in Docker (DinD) 서비스 사용
      alias: docker
  before_script:
    - docker info  # Docker 데몬이 정상적으로 작동하는지 확인
    - echo "$CUSTOM_REGISTRY_PASSWORD" | docker login -u "$CUSTOM_REGISTRY_USER" --password-stdin $CUSTOM_REGISTRY
  script:
    - CI_JOB_ID=$(echo "$CI_COMMIT_SHA" | cut -c1-8)  # CI_JOB_ID를 커밋의 앞 8자리로 설정
    - |
      docker build -t "$CUSTOM_REGISTRY/quickcatch/frontend/$CUSTOM_IMAGE_NAME:$CI_JOB_ID" .
      docker push "$CUSTOM_REGISTRY/quickcatch/frontend/$CUSTOM_IMAGE_NAME:$CI_JOB_ID"
      sed -i "s|image: $CUSTOM_REGISTRY/quickcatch/frontend/$CUSTOM_IMAGE_NAME:.*|image: $CUSTOM_REGISTRY/quickcatch/frontend/$CUSTOM_IMAGE_NAME:$CI_JOB_ID|g" quickcatch/infra/qkc-nsp-fro/qkc-app-fro.yaml
  rules:
    - if: '$CI_COMMIT_BRANCH == "main"'  # main 브랜치에서만 실행